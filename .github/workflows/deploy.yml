name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          pytest

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Ensure Docker is Running on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            echo "Checking if Docker is installed..."
            if ! command -v docker &> /dev/null; then
              echo "Docker not found. Installing..."
              sudo apt update && sudo apt install -y docker.io
              sudo systemctl enable docker
            fi

            echo "Checking if Docker is running..."
            if (! sudo systemctl is-active --quiet docker); then
              echo "Docker is not running. Starting Docker..."
              sudo systemctl start docker
            fi

            echo "Ensuring user $USER has permission to use Docker..."
            sudo usermod -aG docker $USER
            sudo chmod 666 /var/run/docker.sock

            echo "Docker is running and permissions are set."

      - name: Delete Existing Application Files on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            echo "Deleting existing application files on EC2..."
            rm -rf /home/${{ secrets.EC2_USERNAME }}/* || true

      - name: Copy Entire Repository to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          source: "."
          target: "/home/${{ secrets.EC2_USERNAME }}/"

      - name: Stop and Remove Existing Containers on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            echo "Stopping and removing existing containers..."
            docker ps -a --filter "name=fastapi" --format "{{.ID}}" | xargs -r docker stop || true
            docker ps -a --filter "name=nginx" --format "{{.ID}}" | xargs -r docker stop || true
            docker ps -a --filter "name=fastapi" --format "{{.ID}}" | xargs -r docker rm || true
            docker ps -a --filter "name=nginx" --format "{{.ID}}" | xargs -r docker rm || true

      - name: Remove Docker Images for FastAPI and Nginx
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            echo "Removing Docker images for FastAPI and Nginx..."
            docker images --filter "reference=*fastapi*" --format "{{.ID}}" | xargs -r docker rmi -f || true
            docker images --filter "reference=*nginx*" --format "{{.ID}}" | xargs -r docker rmi -f || true

      - name: Ensure Docker Compose is Installed
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            if ! command -v docker-compose &> /dev/null; then
              echo "Docker Compose not found. Installing..."
              sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
            fi
            docker-compose --version

      - name: Run docker-compose Down
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            echo "Running docker-compose down..."
            cd /home/${{ secrets.EC2_USERNAME }}
            docker-compose down || true

      - name: Run docker-compose Up
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            echo "Running docker-compose up..."
            cd /home/${{ secrets.EC2_USERNAME }}
            docker-compose up -d --force-recreate --build
